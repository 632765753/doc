{"guid":"root________","title":"","index":0,"dateAdded":1520419212004000,"lastModified":1542944474556000,"id":1,"typeCode":2,"type":"text/x-moz-place-container","root":"placesRoot","children":[{"guid":"menu________","title":"书签菜单","index":0,"dateAdded":1520419212004000,"lastModified":1533094830614000,"id":2,"typeCode":2,"type":"text/x-moz-place-container","root":"bookmarksMenuFolder","children":[{"guid":"d7SNGMF_KqZi","title":"","index":0,"dateAdded":1491526289330000,"lastModified":1491526289330000,"id":42,"typeCode":3,"type":"text/x-moz-place-separator"},{"guid":"jeXMct6V98hT","title":"","index":1,"dateAdded":1491530376568000,"lastModified":1491530376568000,"id":43,"typeCode":3,"type":"text/x-moz-place-separator"},{"guid":"BJweVIVWd9id","title":"JavaWeb学习总结(五十)—文件上传和下载","index":2,"dateAdded":1504593986659000,"lastModified":1512372635478000,"id":47,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/xdp-gacl/p/4200090.html"}]},{"guid":"toolbar_____","title":"书签工具栏","index":1,"dateAdded":1520419212004000,"lastModified":1542944474556000,"id":3,"typeCode":2,"type":"text/x-moz-place-container","root":"toolbarFolder","children":[{"guid":"3xS504AqEPRn","title":"java帮助","index":0,"dateAdded":1463033877000000,"lastModified":1525405653608000,"id":49,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"PE9aL-E0G_Ei","title":"Jenkins安装与配置","index":0,"dateAdded":1462951019000000,"lastModified":1512372635622000,"id":50,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Jenkins安装与配置：Jenkins安装 在最简单的情况下，Jenkins 只需要两个步骤： 1.下载最新的版本（一个 WAR 文件）。Jen...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://my.oschina.net/u/260244/blog/318755#OSC_h1_1"},{"guid":"B0x_nFrIqtqy","title":"浅谈WebService SOAP、Restful、HTTP（post/get）请求 - zppiio的个人空间 - 开源中国社区","index":1,"dateAdded":1458094426000000,"lastModified":1512372635626000,"id":51,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"浅谈WebService SOAP、Restful、HTTP（post/get）请求：HTTP-GET 和 HTTP-POST HTTP-GET和HTTP-POST是标准协议，他们使用HTTP（超文本传输协议）谓词（谓词是指...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://my.oschina.net/u/1757458/blog/365588"},{"guid":"4pWRTg40V-ZT","title":"SOAP webserivce 和 RESTful webservice 对比及区别 - JayPark不作死 - 开源中国社区","index":2,"dateAdded":1458291274000000,"lastModified":1512372635632000,"id":52,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"SOAP webserivce 和 RESTful webservice 对比及区别  ： 简单对象访问协议（Simple Object Access Protocol，SOAP）是一种基于 XML 的协议，可以和现存的许多...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://my.oschina.net/fuckboogie/blog/304106"},{"guid":"lwuoKiOQNCfy","title":"数据库连接池 ： C3P0、DBCP","index":3,"dateAdded":1463724585000000,"lastModified":1463724585000000,"id":53,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://www.cnblogs.com/shellway/p/3938554.html"},{"guid":"jtTEJcOOQjP6","title":"JeeSite","index":4,"dateAdded":1466136947000000,"lastModified":1512372635640000,"id":54,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"JeeSite是一个开源的企业信息化快速开发平台，Java企业应用开源框架，Java EE（J2EE）快速开发框架，使用经典技术组合（Spring、Spring MVC、MyBatis、Bootstrap UI），包括核心模块如：组织机构、用户、权限授权、内容管理、工作流等。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://jeesite.com/"},{"guid":"YNnqNavgMURv","title":"数据库常见笔试面试题","index":5,"dateAdded":1467970532000000,"lastModified":1512372635645000,"id":55,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Android4.3 规范了BLE的API，但是直到目前的4.4，还有些功能不完善。在BLE协议中，有两个角色，周边（Periphery）和中央（Central）；周边是数据提供者，中央是数据使用/处理者；在iOS SDK里面，可以把一个iOS设备作为一个周边，也可以作为一个中央；但是在Android SDK里面，直到目前最新的Android4.4.2，Android手机只能作为中央来使用","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/hectorhua/article/details/13767361/"},{"guid":"KVQiR0mJt3-e","title":"sql怎么将纵向数据列表转化为横向数据字段","index":6,"dateAdded":1467970546000000,"lastModified":1467970546000000,"id":56,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://bbs.csdn.net/topics/370007076"},{"guid":"c7ipR9txk2MC","title":"Servlet、Struts2、SpringMVC执行流程 - 郑州的文武 - 博客园","index":7,"dateAdded":1468297016000000,"lastModified":1468297016000000,"id":57,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://www.cnblogs.com/zhengbin/p/5596525.html"},{"guid":"YlirkGVavWG9","title":"ActiveMQ入门实例","index":8,"dateAdded":1468404199000000,"lastModified":1468404199000000,"id":58,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://www.cnblogs.com/xwdreamer/archive/2012/02/21/2360818.html"},{"guid":"9g4C3NZufaNL","title":"Hadoop Map/Reduce教程","index":9,"dateAdded":1487062624000000,"lastModified":1487062624000000,"id":59,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://hadoop.apache.org/docs/r1.0.4/cn/mapred_tutorial.html"},{"guid":"IBL3FFSjLaSa","title":"Java是如何读取和写入Cookies","index":10,"dateAdded":1495431013571000,"lastModified":1512372635659000,"id":60,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/lanxiamo/p/5889285.html"},{"guid":"50N3FpOaJHyx","title":"Java序列化与反序列化","index":11,"dateAdded":1496366461900000,"lastModified":1512372635672000,"id":61,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Java序列化与反序列化是什么？为什么需要序列化与反序列化？如何实现Java序列化与反序列化？本文围绕这些问题进行了探讨。 1.Java序列化与反序列化 Java序列化是指把Java对象转换为字节序列的过程；而Java反序列化是指把字节序列恢复为Java对象的过程。 2.为什么需要序列化与反序列化 我们知道，当两个进程进行远程通信时，可以相互发送各种类型的数据，包括文本、图片、音频","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/wangloveall/article/details/7992448/"},{"guid":"I62LQkhR3kll","title":"利用struts的Token机制解决重复提交问题的分析","index":12,"dateAdded":1496716885106000,"lastModified":1512372635675000,"id":62,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"struts的Token机制实际上就是通过用户提交表单时，比较request中的请求参数“org.apache.struts.taglib.html.TOKEN”的值与当前会话中的属org.apache.struts.action.TOKEN的值是否相等，相等则是正常提交，不等则为重复提交。   下面我们看下一个完整的操作流程，这样便于理解:   首先我们要明白，重复提交是发生在什么情","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/oh_mourinho/article/details/7904634"},{"guid":"EvcwcTzpIzAf","title":"private、protected、public、default","index":13,"dateAdded":1489373984000000,"lastModified":1512372635677000,"id":63,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Java中的private、protected、public和default的区别","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://my.oschina.net/u/1169535/blog/403589"},{"guid":"tCtO6W_23I2T","title":"Java GC系列：Java垃圾回收简介","index":14,"dateAdded":1499233651216000,"lastModified":1512372635681000,"id":64,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"本文是JavaPapers出品的Java垃圾回收教程，一共有四篇，本文是第一篇。首先会解释JDK、JVM、JRE和HotSpotVM这些基本。接着会介绍JVM结构和Java堆内存结构。理解这些基础对于理解后面的垃圾回收知识很重要。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.importnew.com/13504.html"},{"guid":"-GTsEpElWL_t","title":"Http请求中Content-Type讲解以及在Spring MVC注解中produce和consumes配置详解","index":15,"dateAdded":1499912147387000,"lastModified":1512372635685000,"id":65,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"引言： 在Http请求中，我们每天都在使用Content-type来指定不同格式的请求信息，但是却很少有人去全面了解content-type中允许的值有多少，这里将讲解Content-Type的可用值，以及在spring MVC中如何使用它们来映射请求信息。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/shinebar/article/details/54408020"},{"guid":"6VoRtE0JuEyP","title":"类加载机制（类加载过程和类加载器）","index":16,"dateAdded":1500439336819000,"lastModified":1512372635687000,"id":66,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/jintao_ma/article/details/51353453"},{"guid":"Vc432rtRpiJD","title":"Java设计模式（一）：单例模式，防止反射和反序列化漏洞","index":17,"dateAdded":1500439501786000,"lastModified":1512372635691000,"id":67,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"一、懒汉式单例模式，解决反射和反序列化漏洞package com.iter.devbox.singleton;import java.io.ObjectStreamException;import java.io.Serializable;/** * 懒汉式（如何防止反射和反序列化漏洞） * @author Shearer * */public class Singleto","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/hardwin/article/details/51477359"},{"guid":"mhdGzFwqXDM0","title":"java对象的强引用，软引用，弱引用和虚引用","index":18,"dateAdded":1500873673092000,"lastModified":1512372635694000,"id":68,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"     众所周知，java中是JVM负责内存的分配和回收，这是它的优点（使用方便，程序不用再像使用c那样操心内存），但同时也是它的缺点（不够灵活）。为了解决内存操作不灵活这个问题，可以采用软引用等方法。      在JDK1.2以前的版本中，当一个对象不被任何变量引用，那么程序就无法再使用这个对象。也就是说，只有对象处于可触及状态，程序才能使用它。这 就像在日常生活中，从商店购买了某样物品后，如果有用，就一直保留它，否则就把它扔到垃圾箱，由清洁工人收走。一般说来，如果物","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/lengyuhong/article/details/6398184"},{"guid":"onZc3bDcpTSG","title":"牛人博客","index":19,"dateAdded":1500960081459000,"lastModified":1512372635698000,"id":69,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/wisgood/article/category/6185235"},{"guid":"F7UNSrxeCEaH","title":"归档 | Format's Notes","index":20,"dateAdded":1501482145005000,"lastModified":1512372635700000,"id":70,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"吃饭睡觉撸代码","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://fangjian0423.github.io/archives/"},{"guid":"kGoy6U5RhINH","title":"Java POI导入导出Excel","index":21,"dateAdded":1501811321453000,"lastModified":1512372635713000,"id":71,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.bbsmax.com/A/QW5Ynwqdma/"},{"guid":"88bDE7aUmtzB","title":"java读取.properties配置文件的几种方法 ","index":22,"dateAdded":1502184650273000,"lastModified":1512372635717000,"id":72,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/s3189454231s/p/5626557.html"},{"guid":"IcB0slnC7OZP","title":"log4j.xml 基本配置","index":23,"dateAdded":1503555332891000,"lastModified":1512372635720000,"id":73,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"1      简介       一般log4j的xml配置方式基本步骤有3个，第一步：配置appender；第二步：配置logger；第三步：配置root。下面配置一个ConsoleAppender和两个DailyRollingFileAppender为例具体展开。1.1  日志级别       不考虑其他因素，日记级别FATAL>ERROR>WARN>INFO>DEBUG，这个是许多","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/jingyuwang1/article/details/49430233"},{"guid":"CIKn-KKZHVAb","title":"JDK 1.8新特性Lambda入门","index":24,"dateAdded":1503644804095000,"lastModified":1512372635723000,"id":74,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"网上关于java lambda的例子很多，但是这些五花八门的例子很不常见不常用，最后导致初学者望而却步，其实我们抓住lambda的本质之后，会发现lambda还是很好理解的。毕竟，java8设计lambda的初衷是给开发者提供便利，而不是制造障碍。lambda表达式本质是匿名方法，下面是一些lambda表达式：(int x, int y) -> x + y() -> 42","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/chenchaofuck1/article/details/51897481"},{"guid":"D0o8epGhGXZM","title":"Java 8新特性终极指南","index":25,"dateAdded":1503646903093000,"lastModified":1512372635725000,"id":75,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Java 8已经公布有一段时间了，种种迹象表明Java 8是一个有重大改变的发行版。现在，是时候把所有Java 8的重要特性收集整理成一篇单独的文章了，希望这篇文章能给你带来阅读上的乐趣。开始吧！","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.importnew.com/11908.html#intro"},{"guid":"FiRepcH66xE8","title":"Java 位运算(移位、位与、或、异或、非）","index":26,"dateAdded":1503974103231000,"lastModified":1512372635728000,"id":76,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Java提供的位运算符有：左移( > ) 、无符号右移( >>> ) 、位与( & ) 、位或( | )、位非( ~ )、位异或( ^ )，除了位非( ~ )是一元操作符外，其它的都是二元操作符。1、左移( Test1、将5左移2位：package com.xcy;public class Test {\tpublic static void main(String[] arg","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/xiaochunyong/article/details/7748713"},{"guid":"6fkv2-K0nHge","title":"二、八、十、十六进制转换","index":27,"dateAdded":1503987384809000,"lastModified":1512372635731000,"id":77,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/gaizai/p/4233780.html"},{"guid":"QqCarDVfQpsM","title":"图说设计模式","index":28,"dateAdded":1504171579623000,"lastModified":1512372635736000,"id":78,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://design-patterns.readthedocs.io/zh_CN/latest/#"},{"guid":"mw6QCvK7ZTXS","title":"从实际案例聊聊Java应用的GC优化","index":29,"dateAdded":1515398674362000,"lastModified":1515398689472000,"id":79,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&mid=2651747273&idx=1&sn=7f947064a41eeecb6816a5d0838581ae&chksm=bd12aa848a65239289d5c39264e89bd175f377f6554bfe93b37ad6498cf13deff356333c5398&mpshare=1&scene=1&srcid=1229bnD25a2zpI3DBKQxsI8T#rd"},{"guid":"ifGWiJyGYCEW","title":"数据库优化之mysql","index":30,"dateAdded":1516862665830000,"lastModified":1516862668973000,"id":80,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"1\\.**优化流程图**。主要从以下四个方面去优化mysql。①存储层:如何选择一个数据库引擎,选择合适的字段列类型。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.toutiao.com/a6501466752893846029/?tt_from=weixin&utm_campaign=client_share&timestamp=1516754750&app=news_article&utm_source=weixin&iid=24043850503&utm_medium=toutiao_android&wxshare_count=1"}]},{"guid":"oNCdVQ49BbL5","title":"翻译工具","index":1,"dateAdded":1508832267489000,"lastModified":1508832267489000,"id":81,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"Johwbh8qfiTh","title":"海词词典_在线词典","index":0,"dateAdded":1508139436977000,"lastModified":1512372635742000,"id":82,"typeCode":1,"charset":"UTF-8","iconuri":"http://i1.haidii.com/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"海词词典是中国第一个在线词典，海量权威词典官方网站。独有2000万词汇，配释义饼图、精细讲解、优质例句，专业提供60个行业11个语种的在线词典和在线翻译服务。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://dict.cn/"},{"guid":"D_s9wNXXKTjs","title":"百度翻译","index":1,"dateAdded":1508832253438000,"lastModified":1512372635744000,"id":83,"typeCode":1,"charset":"UTF-8","iconuri":"https://fanyi.bdstatic.com/static/translation/img/favicon/favicon-16x16_e1883cf.png","annos":[{"name":"bookmarkProperties/description","value":"百度翻译提供即时免费的多语种文本翻译和网页翻译服务，支持中、英、日、韩、泰、法、西、德等28种热门语言互译，覆盖756个翻译方向。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://fanyi.baidu.com/translate?aldtype=16047&query=&keyfrom=baidu&smartresult=dict&lang=auto2zh#auto/zh/"}]},{"guid":"OpTvVfhVvPxJ","title":"session管理","index":2,"dateAdded":1496818390492000,"lastModified":1512372635757000,"id":84,"typeCode":2,"annos":[{"name":"bookmarkProperties/description","value":"session管理是解决集群和分布式的关键","expires":4,"flags":0}],"type":"text/x-moz-place-container","children":[{"guid":"-z1r37Q8U9bv","title":"spring-session使用配置","index":0,"dateAdded":1496813604810000,"lastModified":1512372635760000,"id":85,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/qlong8807/p/5557271.html"},{"guid":"td2qHbhHHkm8","title":"使用负载均衡之后的Session处理思路","index":1,"dateAdded":1496632167510000,"lastModified":1512372635767000,"id":86,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"一，引入Session问题在网站的演进过程中，当我们的单一应用服务器无法再负担众多请求跟响应的时候，这时候，我们就会考虑，要不要搞个服务器集群，这时候，我们又加了台服务器，为了按照一定权重分发请求跟响应，我们又加上了负载均衡设备，本来以为，完美！但是，就像改bug那样，修复掉一个bug,很有可能就产生了新的 bug。当引入了新的中间层，我们似乎解决了服务器因为自身性","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/mawenshu316143866/article/details/51425051"},{"guid":"iL6Pd-4p0bM9","title":"深入理解HTTP Session","index":2,"dateAdded":1495174551221000,"lastModified":1512372635770000,"id":87,"typeCode":1,"charset":"gbk","annos":[{"name":"bookmarkProperties/description","value":"深入理解HTTPSession session在web开发中是一个非常重要的概念，这个概念很抽象，很难定义，也是最让人迷惑的一个名词，也是最多被滥用的名字之一，在不同的场合，session一次的含义也很不相同。这里只探讨H..","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://lavasoft.blog.51cto.com/62575/275589/"},{"guid":"STdFUrdcAtR1","title":"Redis 教程","index":3,"dateAdded":1496210377800000,"lastModified":1512372635773000,"id":88,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Redis 教程    REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。  Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。  它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(li..","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.runoob.com/redis/redis-tutorial.html"},{"guid":"Z-it69Zrm_OL","title":"nginx简易教程","index":4,"dateAdded":1496630283456000,"lastModified":1512372635775000,"id":89,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/jingmoxukong/p/5945200.html"},{"guid":"qDdmoDhftXZt","title":"使用redis进行基于shiro的session集群共享 ","index":5,"dateAdded":1497605422905000,"lastModified":1512372635778000,"id":90,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/sunshine-2015/p/5686750.html"}]},{"guid":"DmYpO1uTcKg5","title":"Maven","index":3,"dateAdded":1496818632516000,"lastModified":1512372635783000,"id":91,"typeCode":2,"annos":[{"name":"bookmarkProperties/description","value":"搭建以及使用简介","expires":4,"flags":0}],"type":"text/x-moz-place-container","children":[{"guid":"E5IkbkNwUI0z","title":"maven编译的时候跳过test - 大喵哥","index":0,"dateAdded":1493790846833000,"lastModified":1512372635785000,"id":92,"typeCode":1,"charset":"UTF-8","iconuri":"https://my.oschina.net/img/favicon.ico?t=1451964198000","annos":[{"name":"bookmarkProperties/description","value":"maven编译的时候跳过test","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://my.oschina.net/u/865478/blog/159657"},{"guid":"xTHTmzGLy9Ah","title":"使用Nexus搭建Maven私服","index":1,"dateAdded":1460684173000000,"lastModified":1460684173000000,"id":93,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://www.cnblogs.com/luotaoyeah/p/3791966.html"},{"guid":"20myKqYEtvct","title":"Maven 私服配置 - learn_more的学习笔记","index":2,"dateAdded":1496913979044000,"lastModified":1512372635793000,"id":94,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"项目构建工具Maven的学习笔记，主要讲解Maven 的私服nexus的配置以及如何把构件上传到nexus","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://my.oschina.net/heweipo/blog/481047"},{"guid":"tuVXeWet-Zf0","title":"Maven：mirror和repository","index":3,"dateAdded":1503450424068000,"lastModified":1512372635796000,"id":95,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Maven：mirror和repository 区别","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://my.oschina.net/sunchp/blog/100634"},{"guid":"fFAa_HbwdZrp","title":"推荐！手把手教你使用Git","index":4,"dateAdded":1504071161866000,"lastModified":1512372635809000,"id":96,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"这是一个非常容易上手的GIt详细教程！如果你对Git刚刚入门或者不熟悉，强烈推荐全文阅读~","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.jobbole.com/78960/"},{"guid":"FvZiFlv_g-2P","title":"Maven settings mirrorOf ","index":5,"dateAdded":1508813781695000,"lastModified":1512372635812000,"id":97,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"使用maven时，从来没仔细注意过setting配置节点的作用，直到今天配置总是不起作用，总是报错才开始去认识这些节点的含义。\n\n\n这里就说mirrorOf，因为其他的怎么配置基本上都不会出错，只有mirrorOf会导致莫名其妙的错误，如果你还不了解mirrorOf，请往下看，你会认识到mirrorOf的重要作用的。\n\n\n主要参考来自：\n\nUsing Mirrors for Rep","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/isea533/article/details/21560089"}]},{"guid":"JC5LiGgtZG3E","title":"apache shiro","index":4,"dateAdded":1497936816403000,"lastModified":1513932742874000,"id":98,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"HEvTbX8L0SYe","title":"跟我学Shiro目录贴","index":0,"dateAdded":1497936807242000,"lastModified":1512372635819000,"id":99,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"    扫一扫，关注我的公众号        购买地址     历经三个月左右时间，《跟我学Shiro》系列教程已经完结，暂时没有需要补充的内容，因此生成PDF版供大家下载。最近项目比较紧，没有时间解答一些疑问，暂时无法回复一些问题，很抱歉，不过可以加群（334194438/348194195）一起讨论问题。           点击下载《跟我学Shiro》教程PDF版。学习交流使用，请勿用于其他任 ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://jinnianshilongnian.iteye.com/blog/2018398"},{"guid":"3E8HbrtqaZm0","title":"Shiro学习--与SpringMVC整合","index":1,"dateAdded":1498014490850000,"lastModified":1512372635824000,"id":100,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Shiro与springmvc整合，mysql数据库，包含脚本，shiro注解配置以及shiro标签","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/frankcheng5143/article/details/50836619"},{"guid":"eX-jBRQsKB93","title":"Apache shiro集群实现","index":2,"dateAdded":1498528188061000,"lastModified":1512372635826000,"id":101,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"近期在ITOO项目中研究使用Apache shiro集群中要解决的两个问题，一个是Session的共享问题，一个是授权信息的cache共享问题，官网上给的例子是Ehcache的实现，在配置说明上不算很详细，我在我们的项目中使用的是nosql（Redis）替代了ehcache做了session和cache的存储，接下来从shiro、Cas、redis、session等等基础知识、基本原理集成的角度来不断的深入分析，系列文章篇幅很长，很丰富，尽请期待！","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/lishehe/article/details/45218251"},{"guid":"JAWI19xQeBIW","title":"Shiro集群实现 -","index":3,"dateAdded":1498541435196000,"lastModified":1512372635831000,"id":102,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"apache shiro集群实现（一） session共享 http://blog.csdn.net/michaelliuyang/article/details/8819852 apache shiro集群实现（二）— cache共享 http://blog.csdn.net/michaelliuyang/article/details/8820390 Redis整合Spring结合使用缓存实例  ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://panyongzheng.iteye.com/blog/2295386"},{"guid":"Fb_OP70XM3uA","title":"Spring Cache抽象详解","index":4,"dateAdded":1498627788018000,"lastModified":1512372635833000,"id":103,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"        缓存简介  缓存，我的理解是：让数据更接近于使用者；工作机制是：先从缓存中读取数据，如果没有再从慢速设备上读取实际数据（数据也会存入缓存）；缓存什么：那些经常读取且不经常修改的数据/那些昂贵（CPU/IO）的且对于相同的请求有相同的计算结果的数据。如CPU--L1/L2--内存--磁盘就是一个典型的例子，CPU需要数据时先从L1/L2中读取，如果没有到内存中找，如果还没有会到磁盘上找 ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://jinnianshilongnian.iteye.com/blog/2001040"}]},{"guid":"nQr3HZzSTpve","title":"前端","index":5,"dateAdded":1499927391891000,"lastModified":1512875923132000,"id":104,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"Pgiq-gNFbOTg","title":"java模板引擎--beetl中文文档","index":0,"dateAdded":1499927401572000,"lastModified":1512372635838000,"id":105,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Beetl是一款6倍于Freemarker的超高性能的java模板引擎，来自于中国！！BeetlSQL是一款功能强大，以SQL为中心，使用简单的全功能的ORMapping工具，支持自动生成代码，内置大量SQL语句，支持市面上绝大多数主流数据库。Beetl和BeetlSQL均能与目前市面上的大多数流行框架无缝整合。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://ibeetl.com/guide/#beetl"},{"guid":"RzRHVv0sI9QF","title":"MDN Web 文档","index":1,"dateAdded":1508387919051000,"lastModified":1512372635843000,"id":106,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Mozilla 开发者网络（MDN）提供有关开放网络技术（Open Web）的信息，包括 HTML、CSS 和万维网及 HTML5 应用的 API。它还记录了  Mozilla 产品的文档，例如 Firefox OS。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://developer.mozilla.org/zh-CN/"}]},{"guid":"LBMCA2LFsI3L","title":"spring","index":6,"dateAdded":1500266842419000,"lastModified":1515554186721000,"id":107,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"-ZvZZH7RfBZC","title":"@RequestBody @ResponseBody","index":0,"dateAdded":1500266857490000,"lastModified":1512372635857000,"id":108,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/qq78292959/p/3760651.html"},{"guid":"ztB6CU_xIkvD","title":"SpringMVC 文件上传配置","index":1,"dateAdded":1501810386345000,"lastModified":1512372635862000,"id":109,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"基本的SpringMVC的搭建在我的上一篇文章里已经写过了，这篇文章主要说明一下如何使用SpringMVC进行表单上的文件上传以及多个文件同时上传的步骤SpringMVC 基础教程 框架分析：http://blog.csdn.net/swingpyzf/article/details/8885459SpringMVC 基础教程 简单入门实例：http://blog.csdn.net","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/swingpyzf/article/details/20230865"},{"guid":"ywMdaCzar4m8","title":"使用spring @Scheduled注解执行定时任务","index":2,"dateAdded":1502863255532000,"lastModified":1512372635867000,"id":110,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"以前框架使用quartz框架执行定时调度问题、老大说这配置太麻烦、每个调度都需要多加在spring的配置中、能不能减少配置的量从而提高开发效率、最近看了看spring的 scheduled的使用注解的方式进行调度、感觉很方便、起码配置的东西少了很多、所以留下来以备忘了、首先要配置我们的spring.xmlxmlns 多加下面的内容、xmlns","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/sd4000784/article/details/7745947"},{"guid":"pn3KIt4Z4r8v","title":"Corn 表达式","index":3,"dateAdded":1502874744471000,"lastModified":1512372635870000,"id":111,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/ycdx2001/p/4876210.html"},{"guid":"pQlZeUDjDx9z","title":"Spring For All","index":4,"dateAdded":1510101198611000,"lastModified":1512372635873000,"id":112,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://spring4all.com/"},{"guid":"7nuGLDJmgIg6","title":"spring源码","index":5,"dateAdded":1510815050545000,"lastModified":1512372635876000,"id":113,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://sunliangliang.com/categories/Spring/"},{"guid":"3bFx1SaEKsvs","title":"Spring Cloud Stream - Spring-cloud Wiki","index":6,"dateAdded":1510819059462000,"lastModified":1512372635878000,"id":114,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://spring-cloud.io/reference/stream/#spring-cloud-stream"},{"guid":"5JCQWsMIW_Sv","title":"spring mvc问题之为何多注入了一个BeanNameUrlHandlerMapping","index":7,"dateAdded":1513069235347000,"lastModified":1513069247267000,"id":115,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"最近在研究springmvc，为了把各种配置方式都了解一下，所以在springmvc的配置文件里组合了几种算是常用的handlermapping和controller组件的配置方式，包括注解配置方式以及xml配置方式，配置文件如下：<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/s","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/xingbear/article/details/77838219"},{"guid":"98f2r1bQDMbl","title":"springMVC注解驱动","index":8,"dateAdded":1513069255515000,"lastModified":1513069262938000,"id":116,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.cnblogs.com/yangh965/p/5124965.html"},{"guid":"Ao_KK7AmcdMO","title":"在spring配置文件中引入properties","index":9,"dateAdded":1514169833199000,"lastModified":1514169839121000,"id":117,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"在Spring中允许把xml配置文件中的一些参数配置到properties中，例如像数据源中的属性配置，把数据源中的属性放到properties中更利于后期的修改和扩展。\n   Spring中此功能的核心是配置PropertyOverrideConfigurer属性覆盖器，目的是用来指定properties文件的位置，配置覆盖器有下面两种方法：\n\n\n\n\n1、context:property-pla","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/c_p_h/article/details/70232413?utm_source=itdadao&utm_medium=referral"}]},{"guid":"og37mBw0mKm-","title":"网络","index":7,"dateAdded":1501033687546000,"lastModified":1504503734932000,"id":118,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"EpgskM59WTFJ","title":"奇云测 -- 测试你的网站速度","index":0,"dateAdded":1501033667598000,"lastModified":1512372635885000,"id":119,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"奇云测，免费提供ping检测，get检测，DNS劫持检测和网站打分等服务，努力打造最干净的网站检测平台","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://ce.cloud.360.cn/"},{"guid":"L9-4GxbLzaYA","title":"认识HTML5的WebSocket","index":1,"dateAdded":1504502225319000,"lastModified":1512372635890000,"id":120,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/wei2yi/archive/2011/03/23/1992830.html"},{"guid":"iuSwObNNQKLS","title":"WebSocket","index":2,"dateAdded":1504503734932000,"lastModified":1512372635902000,"id":121,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/Leo_wl/p/5377767.html"}]},{"guid":"2Pmc11Adwfec","title":"线程","index":8,"dateAdded":1502772763419000,"lastModified":1502847263277000,"id":122,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"mui5qrYIOk-B","title":"日积月累：Java等待子线程执行完毕，再执行后续逻辑 - 1024工场 - CSDN博客","index":0,"dateAdded":1502772773753000,"lastModified":1512372635908000,"id":123,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"在实际开发过过程中，我们会经常遇见将一个“庞大”的任务拆分成多个子任务，各个子任务在独立的子线程中运行。待所有子线程的任务完成之后，在运行后续的业务，或者退出Main线程。代码如下：WorkThread.javapublic class WorkThread extends Thread {    @Override    public void run() {        try {","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/p106786860/article/details/52497215"},{"guid":"5gRyzJ-F-5PA","title":"Java并发编程：线程池的使用 - ImportNew","index":1,"dateAdded":1502772813159000,"lastModified":1512372635915000,"id":124,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"如果并发的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。那么有没有一种办法使得线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务？在Java中可以通过线程池来达到这样的效果。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.importnew.com/17820.html"},{"guid":"0-vzujRIzLC7","title":"java Web 启动时自动执行代码的几种方式","index":2,"dateAdded":1502847263277000,"lastModified":1512372635918000,"id":125,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/flyingeagle/articles/6681427.html"}]},{"guid":"_yb8QKxFU9bT","title":"数据库","index":9,"dateAdded":1510047130513000,"lastModified":1533535358869000,"id":126,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"AvGcHn1tnVe1","title":"windows下redis安装使用","index":0,"dateAdded":1510215384517000,"lastModified":1512372635930000,"id":127,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.cnblogs.com/ningskyer/articles/5730611.html"},{"guid":"ZfLcSVPMKbOq","title":"oracle","index":1,"dateAdded":1517202747634000,"lastModified":1517202813442000,"id":128,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"9qpItigZ-V5J","title":"oracle行转列函数 - CSDN博客","index":0,"dateAdded":1510047119052000,"lastModified":1517202795050000,"id":129,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"构建测试表：\ncreate table TABLE1  \n\n(   \n  ID   INTEGER,   \n  NAME VARCHAR2(10)   \n)   \n  \ncreate table TABLE2   \n(   \n  ID   INTEGER,   \n  ROLE VARCHAR2(10)   \n)   \n  \ninsert into TABLE1 (ID,","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/ning109314/article/details/10919029"},{"guid":"W07YPWGcjYYc","title":"看懂Oracle执行计划 - Dreamer-1 - 博客园","index":1,"dateAdded":1517202802732000,"lastModified":1517202813440000,"id":130,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.cnblogs.com/Dreamer-1/p/6076440.html"}]},{"guid":"KAuk1PWkpP-l","title":"mysql","index":2,"dateAdded":1517202771193000,"lastModified":1518161147197000,"id":131,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"6if0099xNmce","title":"数据结构 B+tree","index":0,"dateAdded":1518161140613000,"lastModified":1518161169693000,"id":132,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"http://cs.usfca.edu/~galles/visualization/Algorithms.html"}]}]},{"guid":"0G4CylH1ZkJy","title":"Linux","index":10,"dateAdded":1512870439668000,"lastModified":1520839272057000,"id":139,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"UcK8Usc8Omhk","title":"Linux chmod授权命令说明","index":0,"dateAdded":1512870430882000,"lastModified":1512870452833000,"id":140,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.cnblogs.com/chinareny2k/articles/1639540.html"},{"guid":"3IGTkEuUGzCu","title":"linux创建用户、设置密码、修改用户、删除用户","index":1,"dateAdded":1512875921216000,"lastModified":1512875929699000,"id":141,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"创建用户、设置密码、修改用户、删除用户：\nuseradd testuser 创建用户testuser\npasswd testuser 给已创建的用户testuser设置密码\n说明：新创建的用户会在/home下创建一个用户目录testuser\nusermod --help","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/sunxx1986/article/details/6854307"},{"guid":"l5XwdRofEdb0","title":"sudo命令_Linux sudo 命令用法详解：以其他身份来执行命令","index":2,"dateAdded":1515551084889000,"lastModified":1515551093134000,"id":142,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://man.linuxde.net/sudo"},{"guid":"vzM3vYJ82Pcs","title":"linux文件权限解说","index":3,"dateAdded":1515554183800000,"lastModified":1515554190705000,"id":143,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"由于Linux是个多用户多任务的系统，因此可能常常会有多人同时使用这部主机来进行工作的情况发生， 为了考虑每个人的隐私权以及每个人喜好的工作环境，因此角色的概念非常重要. 这里有3个概念.\n1)档案拥有者(user): 创建档案的人.\n2)群组(group): 档案所属的群组.\n3)其他(others): user和group之外的其它用户.","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/aa2650/article/details/9231603"}]},{"guid":"9rwVifG27v5z","title":"activemq","index":11,"dateAdded":1513931475388000,"lastModified":1523426148942000,"id":144,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"UIndeXDBCIc8","title":"JMS学习(八)-ActiveMQ Consumer 使用 push 还是 pull 获取消息 - hapjin - 博客园","index":0,"dateAdded":1513931466497000,"lastModified":1513931475399000,"id":145,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.cnblogs.com/hapjin/p/5683648.html"},{"guid":"Q_qLNON0kVPP","title":"Apache ActiveMQ","index":1,"dateAdded":1513932732844000,"lastModified":1513932742873000,"id":146,"typeCode":1,"charset":"GBK","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://activemq.apache.org/what-is-the-prefetch-limit-for.html"},{"guid":"cZVKn0ZTOWo0","title":"javax.jms.JMSException: Failed to build body from content. Serializable class not available to broke - CSDN博客","index":2,"dateAdded":1513910386214000,"lastModified":1514095216348000,"id":147,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. \nReason: java.lang.ClassNotFoundException: com.syx.producter.model.InfoModel\n造成这个错误的原因是ActiveMQ","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/sunyx1130/article/details/51942656"},{"guid":"JrGBCuDxNrDp","title":"Spring整合JMS（四）——事务管理 ","index":3,"dateAdded":1514164382616000,"lastModified":1514164390270000,"id":148,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"     Spring提供了一个JmsTransactionManager用于对JMS ConnectionFactory做事务管理。这将允许JMS应用利用Spring的事务管理特性。JmsTransactionManager在执行本地资源事务管理时将从指定的ConnectionFactory绑定一个ConnectionFactory/Session这样的配对到线程中。JmsTemplate会自动检 ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://elim.iteye.com/blog/1983532"},{"guid":"K5fQ2MxHnp0k","title":"activemq 三种消息监听器","index":4,"dateAdded":1514893843174000,"lastModified":1514893849591000,"id":149,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"在Spring整合JMS的应用中我们在定义消息监听器的时候一共可以定义三种类型的消息监听器，分别是MessageListener、SessionAwareMessageListener和MessageListenerAdapter。下面就分别来介绍一下这几种类型的区别。1.3.1  MessageListenerMessageListener是最原始的消息监听器，它是JMS规范中定义的一个","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/asdfsadfasdfsa/article/details/53129270"},{"guid":"XGxXx9uiIxvo","title":"ActiveMQ的消息重发与死信管理(DLQ)","index":5,"dateAdded":1514180950085000,"lastModified":1523426148942000,"id":48,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"DLQ-死信队列(Dead Letter Queue)用来保存处理失败或者过期的消息。\n出现以下情况时，消息会被redelivered\n\nA transacted session is used and rollback() is called. A transacted session is closed before commit is called. A session is usin","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/lulongzhou_llz/article/details/37518287"}]},{"guid":"KrqBh6dSgiuC","title":"windows","index":12,"dateAdded":1515120314582000,"lastModified":1518160952483000,"id":150,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"T36Zd8Ya_SW0","title":"Windows系统下查看某一进程下所有线程的dos命","index":0,"dateAdded":1515120299587000,"lastModified":1515120314582000,"id":151,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.cnblogs.com/zichuan/p/6743493.html"}]},{"guid":"3I5z6RBVv88I","title":"具志网络","index":13,"dateAdded":1520472558893000,"lastModified":1542357685974000,"id":153,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"-bLnRXaJXob0","title":"测试环境","index":0,"dateAdded":1520839268480000,"lastModified":1520839280094000,"id":154,"typeCode":1,"charset":"UTF-8","iconuri":"http://192.168.31.146:81/static/img/favicon.ico","type":"text/x-moz-place","uri":"http://192.168.31.146:81/#/"},{"guid":"LmfEjHkLwr5b","title":"开发环境","index":1,"dateAdded":1521706164292000,"lastModified":1521706187880000,"id":158,"typeCode":1,"charset":"UTF-8","iconuri":"http://192.168.31.177:8080/static/img/favicon.ico","type":"text/x-moz-place","uri":"http://192.168.31.177:8080/#/"},{"guid":"_LjiJOlaHfUP","title":"jenkins","index":2,"dateAdded":1523426091068000,"lastModified":1523426174446000,"id":162,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"cYlPb2UJrbGf","title":"bat 批处理－取年、月、日、时、分、秒","index":0,"dateAdded":1521163183501000,"lastModified":1523426120162000,"id":157,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"bat 批处理－取年、月、日、时、分、秒、毫秒 \n取年份：echo %date:~0,4% \n取月份：echo %date:~5,2% \n取日期：echo %date:~8,2% \n取星期：echo %date:~10,6% \n取小时：echo %time:~0,2% \n取分钟：echo %time:~3,2% \n取秒：echo %time:~6,2% \n取毫秒：echo %tim","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/liruxing1715/article/details/18215177"},{"guid":"NXSgBDPNcXfz","title":"jenkins+maven+svn","index":1,"dateAdded":1520929066701000,"lastModified":1523426121644000,"id":155,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"前言\n在安装之前，我想说明一下本文的目的，jenkins的一款持续集成工具，\n   它可以做的事情很多，其中一个主要的功能就是简化部署流程\n   \n   回想一下我们的发布流程：\n1.本地把项目打包\n2.通过FTP等工具，传输到服务器\n3.关闭tomcat，把打包的项目放到webapp目录下\n4.启动tomcat\n\n\n   如果每次都这么搞的话，不仅慢，而且容易出错。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://blog.csdn.net/pein_zero/article/details/52597615"},{"guid":"clJDK6Jtv-6m","title":"批处理-批处理基础","index":2,"dateAdded":1521006170222000,"lastModified":1523426174446000,"id":156,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/DswCnblog/p/5436245.html"}]},{"guid":"6ZMGmq37FDw-","title":"Java ConcurrentModificationException异常原因和解决方法 - ImportNew","index":3,"dateAdded":1523424598100000,"lastModified":1523426165454000,"id":161,"typeCode":1,"charset":"UTF-8","iconuri":"http://www.importnew.com/wp-content/themes/jobbolev4blog/mobileicon.png","annos":[{"name":"bookmarkProperties/description","value":"在前面一篇文章中提到，对Vector、ArrayList在迭代的时候如果同时对其进行修改就会抛出java.util.ConcurrentModificationException异常。下面我们就来讨论以下这个异常出现的原因以及解决办法。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.importnew.com/18416.html"},{"guid":"nB2bMMPKZK-P","title":"Java对象和XML转换 - 肥宅兜 - 博客园","index":4,"dateAdded":1524461642114000,"lastModified":1524461645908000,"id":167,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/doudouxiaoye/p/5693441.html"},{"guid":"Hd6OhruoTy0B","title":"泛型中? super T和? extends T的区别 - lucky.dai - 博客园","index":5,"dateAdded":1524464636828000,"lastModified":1524464639190000,"id":168,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/lucky_dai/p/5485421.html"},{"guid":"5JJQxK3RnH1X","title":"rocketmq","index":6,"dateAdded":1525398222346000,"lastModified":1525413611440000,"id":182,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"KGbYDxKLXh6Y","title":"RocketMq Exception \"connect to <：10909> failed\"问题 ","index":0,"dateAdded":1525243638912000,"lastModified":1525398243368000,"id":181,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"RocketMq Exception \"connect to <：10909> failed\"问题原因分析和解决。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/xyzjl/article/details/54970927"},{"guid":"Bga30En0iVjs","title":"RocketMQ 解决 No route info of this topic 异常步骤","index":1,"dateAdded":1525233751600000,"lastModified":1525398251330000,"id":180,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"rocketmq运行时提示 No route info of this topic 异常产生的原因可能是\n①Broker禁止自动创建Topic，且用户没有通过手工方式创建Topic\n②Broker没有正确连接到Name Server\n③Producer没有正确连接到Name Server \n\n\n首先解决①这种情况，启动顺序要先启动nameserver，再启动broker，启动broke","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/chenaima1314/article/details/79403113"},{"guid":"PP2D4lhc3a62","title":"rocketmq linux 部署","index":2,"dateAdded":1524905603522000,"lastModified":1525398254944000,"id":178,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"1、准备linux 64位jdk1.7及以上版本（如果是在ubuntu虚拟机上部署，可能需要卸载原有jdk，可以参考http://blog.csdn.net/a77nian/article/details/52280951）。\n\n\n2、下载apache rocketmq，下载地址：https://www.apache.org/dyn/closer.cgi?path=incubator/roc","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/a77nian/article/details/62974474"},{"guid":"gz3mpHnOl_Zd","title":"RocketMQ 安装及快速入门","index":3,"dateAdded":1524730112530000,"lastModified":1525398261510000,"id":175,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"\n\n如果你对 RocketMQ 还没了解，建议先看下上一篇文章：RocketMQ 初探\n\n\n\n安装条件\n\n\n64位操作系统，建议使用 Linux / Unix / Mac;\n64位JDK 1.8+;\nMaven 3.2.x\n\n\n\n\n下载和构建\n\n从 https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.2.0/rocketmq-all-4.2....","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/tzs_1041218129/article/details/79296633"},{"guid":"rPUbll9fG1N7","title":"web项目集成 rocketmq 3.2.6","index":4,"dateAdded":1524728886936000,"lastModified":1525398265562000,"id":174,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/yun965861480/p/7384915.html"},{"guid":"ZCP3ec8HN923","title":"RocketMQ最佳实践（四）","index":5,"dateAdded":1524656804488000,"lastModified":1525398268498000,"id":173,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"RocketMQ有一个对其扩展的开源项目incubator-rocketmq-externals，这个项目中有一个子模块叫“rocketmq-console”，这个便是管理控制台项目了。\n\n\n先将incubator-rocketmq-externals拉到本地，因为我们需要自己对rocketmq-console进行编译打包运行。\n\n\n通过命令行进入到rocketmq-console子目","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/jayjjb/article/details/72674738"},{"guid":"8q0RMQ7WxxrH","title":"Rocketmq-Topic - CSDN博客","index":6,"dateAdded":1524650754784000,"lastModified":1525398271324000,"id":172,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"rocket-topic 创建","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/adaihao_/article/details/54296639"},{"guid":"CAFYtoEDsNRS","title":"RocketMQ部署开发","index":7,"dateAdded":1524647745744000,"lastModified":1525398274658000,"id":171,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"RocketMQ是阿里巴巴团队研发的高性能、分布式消息中间件，已捐赠给Apache基金会，面向所有开发人员开源免费使用，本文主要参考其官方快速文档（http://jm.taobao.org/2017/01/12/rocketmq-quick-start-in-10-minutes/）和自己亲自动手实践，我们从了解RocketMQ开始，循序渐进，一步一步亲自实现中间件部署，测试消息收发，从理论和实践两方面学会使用RocketMQ。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/tang86100/article/details/78832315"},{"guid":"g68BzzBeKYpt","title":"分布式消息队列RocketMQ部署","index":8,"dateAdded":1525405650938000,"lastModified":1525405666284000,"id":185,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/saneri/p/5066265.html"},{"guid":"j3KFYW2IqVpb","title":"海潮的专栏 - CSDN博客","index":9,"dateAdded":1525413581990000,"lastModified":1525413585026000,"id":187,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","type":"text/x-moz-place","uri":"https://blog.csdn.net/yousite1/article/category/7410407"}]},{"guid":"yzQML9MYSU4H","title":"哪些方法不能实施Spring AOP事务","index":7,"dateAdded":1525403132836000,"lastModified":1525403138906000,"id":183,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"由于Spring事务管理是基于接口代理或动态字节码技术，通过AOP实施事务增强的。虽然Spring还支持AspectJ LTW在类加载期实施增强，但这种方法很少使用，所以我们不予关注。 \n    对于基于接口动态代理的AOP事务增强来说，由于接口的方法都必然是public的，这就要求实现类的实现方法也必须是public的（不能是protected、private等），同时不能使用static的修","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/erica_1230/article/details/51441419"},{"guid":"Qe2aDEbAWevN","title":"String.format()方法使用说明","index":8,"dateAdded":1526619975476000,"lastModified":1526619983925000,"id":188,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"JDK1.5开始String类中提供了一个非常有用的方法String.format(String format, Object ... args)\n查看源码得知其实是调用了java.util.Formatter.format(String, Object...)方法\npublic static String format(String format, Object ... args) {\n ","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/thc1987/article/details/17528093"},{"guid":"u2DY4s7s0nES","title":"Projects · Dashboard · GitLab","index":9,"dateAdded":1529976767735000,"lastModified":1529976775269000,"id":195,"typeCode":1,"charset":"UTF-8","iconuri":"http://193.112.224.241/assets/touch-icon-ipad-retina-c0dbda7e71802ee480f6d666da4b834a.png","annos":[{"name":"bookmarkProperties/description","value":"GitLab Community Edition","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://193.112.224.241/"},{"guid":"T4LDgJ9A-j4C","title":"SosoApi simple online","index":10,"dateAdded":1530840738081000,"lastModified":1530840747383000,"id":199,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"Simple online,Simple offline 专注于API接口文档管理及线上线下傻瓜式测试的API服务平台","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://193.112.224.241:81/sosoapi-web/"},{"guid":"9uMretXDN5tR","title":"新环境::我的档案 - 禅道","index":11,"dateAdded":1531200243725000,"lastModified":1531200255844000,"id":200,"typeCode":1,"charset":"UTF-8","iconuri":"http://193.112.224.241:82/zentao/favicon.ico","type":"text/x-moz-place","uri":"http://193.112.224.241:82/zentao/index.php?m=my&f=profile"},{"guid":"Bdv_8KSApZWp","title":"仪表盘 [Jenkins]","index":12,"dateAdded":1531972188792000,"lastModified":1541575140903000,"id":202,"typeCode":1,"charset":"UTF-8","iconuri":"http://111.230.197.41/jenkins/static/0e8b1454/favicon.ico","type":"text/x-moz-place","uri":"http://111.230.197.41/jenkins/"},{"guid":"XkyL8xszCO84","title":"HttpClient工具类 - 简书","index":13,"dateAdded":1532496655547000,"lastModified":1532496658048000,"id":203,"typeCode":1,"charset":"UTF-8","iconuri":"https://cdn2.jianshu.io/assets/apple-touch-icons/152-bf209460fc1c17bfd3e2b84c8e758bc11ca3e570fd411c3bbd84149b97453b99.png","annos":[{"name":"bookmarkProperties/description","value":"最近在工作中需要在后台调用短信接口，经过研究决定使用HttpClient，自己封装了一个HttpClient工具类，简单轻松的实现get，post，put和delete请求，希望分享给大家。 1. 什么是HttpClient HTTP 协议可能是现在 Internet 上使用得最多、最重要的协议了，越来越多的 Java 应用程序需要直接通过 HTTP 协议来访问网络资源。虽然在 JDK 的 ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.jianshu.com/p/9504ecc7abad"},{"guid":"hySghVg06U13","title":"Linux安装JDK完整步骤","index":14,"dateAdded":1533007547331000,"lastModified":1533007553783000,"id":208,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/Dylansuns/p/6974272.html"},{"guid":"OlDYNQnL-2QQ","title":"elk","index":15,"dateAdded":1533094839191000,"lastModified":1533784770753000,"id":213,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"1vaN_Fk3ucwc","title":"代码干货｜Logstash详解之Filter","index":0,"dateAdded":1533089333755000,"lastModified":1533094864267000,"id":212,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"Logstash三个组件的第二个组件，也是真个Logstash工具中最复杂，最蛋疼的一个组件，当然，也是最有作用的一个组件。\n1、grok插件 grok插件有非常强大的功能，他能匹配一切数据，但是他的性能和对资源的损耗同样让人诟病。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/cs13522431352/article/details/76576997"},{"guid":"OVwsZubenNC7","title":"合并多行数据(Multiline) |","index":1,"dateAdded":1533031006160000,"lastModified":1533094867040000,"id":211,"typeCode":1,"charset":"UTF-8","iconuri":"https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/gitbook/images/apple-touch-icon-precomposed-152.png","type":"text/x-moz-place","uri":"https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/codec/multiline.html"},{"guid":"WyOJ4wOCLpsQ","title":"ELK 架构之 Elasticsearch、Kibana、Logstash 和 Filebeat 安装配置汇总","index":2,"dateAdded":1533027521662000,"lastModified":1533094869598000,"id":210,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/xishuai/p/elk-elasticsearch-kibana-logstash-filebeat-log4j2.html"},{"guid":"XxX71XFBGWTV","title":"elk安装时最常见的报错","index":3,"dateAdded":1533015815374000,"lastModified":1533094871175000,"id":209,"typeCode":1,"charset":"UTF-8","annos":[{"name":"bookmarkProperties/description","value":"1.在启动kibana的时候报一下错误 max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]max number of threads [1024] for ...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"http://www.mamicode.com/info-detail-1844174.html"},{"guid":"TUEmd3vGNHrw","title":"Filebeat的工作原理","index":4,"dateAdded":1533003624679000,"lastModified":1533094875932000,"id":207,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/blogjun/articles/8108440.html"},{"guid":"DCA4rMXU49-B","title":"ELK 之 Logstash - CSDN博客","index":5,"dateAdded":1532933937307000,"lastModified":1533094880979000,"id":205,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"ELK 之 Logstash简介:ELK 之 LogstashLogstash 是一个接收,处理,转发日志的工具。支持系统日志,webserver 日志,错误日志,应用日志,总之包括所有可以抛出来的日志类型。在一个典型的使用场景下(ELK):用 Elasticsearch 作为后台数据的存储,kibana用来前端的报表展示。Logstash 在其过程中担任搬运工的角色,它为数据存储,报表查询和日志解","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/iguyue/article/details/77006201"},{"guid":"eD6sLeBxLJYX","title":"Kibana 基础入门","index":6,"dateAdded":1533003420920000,"lastModified":1533094885383000,"id":206,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/moonlightL/p/7764919.html"},{"guid":"qxx_3QW2CV4S","title":"Elasticsearch入门教程","index":7,"dateAdded":1532919272952000,"lastModified":1533094888649000,"id":204,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"全文搜索属于最常见的需求，开源的 Elasticsearch （以下简称 Elastic）是目前全文搜索引擎的首选。它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。Elastic 的底层是开源库 Lucene。但是，你没法直接用 Lucene，必须自己写代码去调用它的接口。Elastic 是 Lucene 的封装，提供了 REST API 的操","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/ax8785r8C32nef593/article/details/78988443"},{"guid":"Kp1FLTcsN6QL","title":"Spring Boot集成ElasticSearch实现搜索引擎的示例","index":8,"dateAdded":1533285700260000,"lastModified":1533285719490000,"id":215,"typeCode":1,"charset":"GBK","annos":[{"name":"bookmarkProperties/description","value":"这篇文章主要介绍了Spring Boot集成ElasticSearch实现搜索引擎的示例，小编觉得挺不错的，现在分享给大家，也给大家做个参考。一起跟随小编过来看看吧","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.jb51.net/article/127390.htm"},{"guid":"tWeVoQnlvDIg","title":"shell脚本中判断上一个命令是否执行成功 - CSDN博客","index":9,"dateAdded":1533535353808000,"lastModified":1533535358861000,"id":217,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"shell脚本中判断上一个命令是否执行成功\n\nshell中使用符号“$?”来显示上一条命令执行的返回值，如果为0则代表执行成功，其他表示失败。\n\n结合if-else语句实现判断上一个命令是否执行成功。\n示例如下：\n\nif [ $? -ne 0 ]; then\n    echo \"failed\"\nelse\n    echo \"succeed\"\n\nfi\n\n\n或者：\nif","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/maybe_lee/article/details/78604927"},{"guid":"7hktNF07vRMm","title":"shell脚本重启tomcat","index":10,"dateAdded":1533549765355000,"lastModified":1533549777221000,"id":218,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/007sx/p/7088623.html"},{"guid":"6lnywo7FDtWI","title":"聊一聊Elasticsearch的健康状态","index":11,"dateAdded":1533614196746000,"lastModified":1533614203721000,"id":219,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"其实一直以来都没有太关注elsticsearch的健康状态，只是单纯的部署完成，然后es能正常工作就OK了，然而事实却并非如此，elasticsearch得索引状态和集群状态分为green，yellow，red三种","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/gamer_gyt/article/details/53230165"},{"guid":"qCjGHTEzouc9","title":"elasticsearch6.3.1 启用x-pack - CSDN博客","index":12,"dateAdded":1533784545913000,"lastModified":1533784555687000,"id":222,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"前言\n\nelasticsearch6.3.1安装包中已经集成了x-pack插件，无需使用elasticsearch-plugin install来安装x-pack，我们需要做的是使x-pack工作\n\n步骤：\n\n1、运行elasticsearch\n\n2、启用trial license（30天试用）\n\n\ncurl -H &quot;Content-Type:application/json&quot; -XPOST  h...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/zou79189747/article/details/81164576"}]},{"guid":"QKMmeEPQPu2c","title":"你知道的, 为了搜索  Elasticsearch","index":16,"dateAdded":1533263838060000,"lastModified":1533263851433000,"id":214,"typeCode":1,"charset":"UTF-8","iconuri":"https://www.elastic.co/android-chrome-192x192.png","annos":[{"name":"bookmarkProperties/description","value":"有关如何使用 Elasticsearch、Kibana、Logstash、Beats、X-Pack、Elastic Cloud、Elasticsearch for Apache Hadoop 及我们各种语言的客户端的文档。","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://www.elastic.co/guide/cn/elasticsearch/guide/current/intro.html"},{"guid":"SRrOMONp0SZQ","title":"线上发布计划模版","index":17,"dateAdded":1533629271768000,"lastModified":1533629278359000,"id":220,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"该模版均由此版本研发主R进行填写，测试等负责补充相关的内容。  1） 发布计划必须在发布之前经该产品的技术负责人Review以及邮件回复确认方可执行实际的发布。 2）发布需要有发布的先后顺序以及发布的责任人。 3）测试报告请以wiki的方式提供，方便追溯。 4）发布的前置条件：有测试报告，并且有PM的同意发布回复邮件以及技术负责人的允许发布回复邮件。  预计发布时间2017-12-29 AM10:...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/qq_20325039/article/details/79822075"},{"guid":"vikBijVaAdqR","title":"pt-query-digest 安装及使用","index":18,"dateAdded":1534218904725000,"lastModified":1534218912319000,"id":225,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/sc-xm/p/4288323.html"},{"guid":"uc0dySxPUqeR","title":"从零开始玩转JMX","index":19,"dateAdded":1534324128766000,"lastModified":1534324136731000,"id":226,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"JMX的全称为Java Management Extensions. 顾名思义，是管理Java的一种扩展。这种机制可以方便的管理、监控正在运行中的Java程序。常用于管理线程，内存，日志Level，服务重启，系统环境等。\n\n\n\n简介\n\n\n\n基本术语\n\n\nMBean：是Managed Bean的简称，可以翻译为“管理构件”。在JMX中MBean代表一个被管理的资源实例，通过MBean中暴露的方法和属...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/u013256816/article/details/52800742"},{"guid":"kM8x_PXASDnD","title":"国外网站","index":20,"dateAdded":1542357645183000,"lastModified":1542357685974000,"id":233,"typeCode":2,"type":"text/x-moz-place-container","children":[{"guid":"KgeJRdLFdJj8","title":"LeetCode - The World's Leading Online Programming Learning Platform","index":0,"dateAdded":1542357668156000,"lastModified":1542357685974000,"id":234,"typeCode":1,"iconuri":"https://leetcode.com/favicon-192x192.png","type":"text/x-moz-place","uri":"https://leetcode.com/"}]}]},{"guid":"CYykuFI-UiPF","title":"OSI七层协议模型、TCP/IP四层模型学习笔记 - 好就分享 - 博客园","index":14,"dateAdded":1536114790464000,"lastModified":1536114793905000,"id":229,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/Robin-YB/p/6668762.html"},{"guid":"Zq-cfB1L0Guk","title":"高并发解决方案之一 ——负载均衡 - CSDN博客","index":15,"dateAdded":1536115622675000,"lastModified":1536115624610000,"id":230,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","annos":[{"name":"bookmarkProperties/description","value":"1.什么是负载均衡？        当一台服务器的性能达到极限时，我们可以使用服务器集群来提高网站的整体性能。那么，在服务器集群中，需要有一台服务器充当调度者的角色，用户的所有请求都会首先由它接收，调度者再根据每台服务器的负载情况将请求分配给某一台后端服务器去处理。那么在这个过程中，调度者如何合理分配任务，保证所有后端服务器都将性能充分发挥，从而保持服务器集群的整体性能最优，这就是负载均衡问题。下...","expires":4,"flags":0}],"type":"text/x-moz-place","uri":"https://blog.csdn.net/github_37515779/article/details/79953788"},{"guid":"UVSxKNRFISi0","title":"[转] 细说linux挂载——mount - Ma5on - 博客园","index":16,"dateAdded":1537941174592000,"lastModified":1537941180582000,"id":231,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/ma5on/p/4357625.html"},{"guid":"BjAugi34cp0m","title":"springboot + mybatis设置将SQL语句打印到控制台 - u012843873的博客 - CSDN博客","index":17,"dateAdded":1539257071567000,"lastModified":1539257076523000,"id":232,"typeCode":1,"charset":"UTF-8","iconuri":"https://csdnimg.cn/public/favicon.ico","type":"text/x-moz-place","uri":"https://blog.csdn.net/u012843873/article/details/80241467"},{"guid":"GgRbkTAcAfj6","title":"一文让你明白Java字节码 - 简书","index":18,"dateAdded":1542944472492000,"lastModified":1542944474556000,"id":235,"typeCode":1,"iconuri":"https://cdn2.jianshu.io/assets/apple-touch-icons/152-bf209460fc1c17bfd3e2b84c8e758bc11ca3e570fd411c3bbd84149b97453b99.png","type":"text/x-moz-place","uri":"https://www.jianshu.com/p/252f381a6bc4"}]},{"guid":"unfiled_____","title":"其他书签","index":3,"dateAdded":1520419212004000,"lastModified":1542944474556000,"id":5,"typeCode":2,"type":"text/x-moz-place-container","root":"unfiledBookmarksFolder","children":[{"guid":"OBprVb16_8NN","title":"Java自定义类加载器与双亲委派模型 - Givefine - 博客园","index":0,"dateAdded":1535678767773000,"lastModified":1535678767773000,"id":228,"typeCode":1,"charset":"UTF-8","type":"text/x-moz-place","uri":"https://www.cnblogs.com/wxd0108/p/6681618.html"}]},{"guid":"mobile______","title":"mobile","index":4,"dateAdded":1520419212004000,"lastModified":1520472234009000,"id":6,"typeCode":2,"annos":[{"name":"mobile/bookmarksRoot","value":"1","expires":4,"flags":0}],"type":"text/x-moz-place-container","root":"mobileFolder"}]}